package util;

/**
 * This agent it will add some intelligent in Optimus Prime.
 * 
 * @version 1.0
 * @author Lucas
 *
 */
public class SmartAgent {
	
	private double enemyMovimentVelocityX = 0;
	private double enemyMovimentVelocityY = 0;
	private double enemyX;
	private double enemyY;
	private boolean podeMovimentar = true;
	
	public SmartAgent(){
		enemyMovimentVelocityX = 0;
	}
	
	/**
	 * Prepares a nice shot based on distance of the target, bullet's power and enemy's velocity.
	 * 
	 * @param distance
	 * @param power
	 * @return shoot
	 */
	public Shoot niceShoot(double distance, double power){
		
		if (power < 20) {
			return new Shoot(1, 1);
		}

		if (distance < 180) {
			return new Shoot(3, 3);
		}else if (distance < 250) {
			return new Shoot(2, 3);
		} else if (distance < 300) {
			return new Shoot(1, 2);
		} else if (distance < 550) {
			if (enemyMovimentVelocityX < 5) {
				return new Shoot(2, 3);
			}
			return new Shoot(2, 1);
		} else if (distance < 700) {
			if (enemyMovimentVelocityX < 5) {
				return new Shoot(2, 3);
			}
			return new Shoot(1, 1);
		} else if (distance < 900) {
			if (enemyMovimentVelocityX < 5) {
				return new Shoot(2, 3);
			}
			return new Shoot(1, 1);
		}
		
		return new Shoot(1, 1);
	}
	
	/**
	 * Update the enimy's position
	 * 
	 * @param posX
	 * @param posY
	 */
	public void updatePosEnimy(double posX, double posY) {
		
		enemyMovimentVelocityX = enemyX - posX;
		enemyMovimentVelocityY = enemyY - posY;

		enemyX = posX;
		enemyY = posY;

	}
	
	
	/**
	 * Get a target 
	 * 
	 * @param Adv
	 * @param dirBody
	 * @param dirGun
	 * @return
	 */
	public double target(double Adv, double dirBody, double dirGun) {
		double shotAngle = dirBody + Adv - dirGun;
		if (!(shotAngle > -180 && shotAngle <= 180)) {
			while (shotAngle <= -180) {
				shotAngle += 360;
			}
			while (shotAngle > 180) {
				shotAngle -= 360;
			}
		}
		return shotAngle;
	}
}
